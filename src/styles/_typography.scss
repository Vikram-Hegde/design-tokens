@use 'sass:map';
@use 'sass:math';
@use 'sass:meta';
@use './mixins' as *;
@use './config' as config;

$font-sizes: ();

// typescale values from type-scale.com
$type-ratios: (
	'minorSecond': 1.067,
	'majorSecond': 1.125,
	'minorThird': 1.2,
	'majorThird': 1.25,
	'perfectFourth': 1.333,
	'augmentedFourth': 1.414,
	'perfectFifth': 1.5,
	'goldenRatio': 1.618,
);

@function type-ratio($key) {
	@return map.get($type-ratios, $key);
}

$base-size: if(
	meta.global-variable-exists('base-size', config),
	config.$base-size,
	1rem
);
$type-ratio: type-ratio('majorThird');

$level-size: $base-size;

// Headings
@for $i from 1 through 6 {
	$level-size: $level-size * $type-ratio;
	// $font-sizes: map.set($font-sizes, h#{$i}, $level-size);

	$fluid-reduction: if($level-size > 4, 0.5, 0.33);

	$fluid-min: math.max(
		$base-size,
		$level-size - ($fluid-reduction * $level-size)
	);
	$fluid-scaler: calc(($level-size - $fluid-min) + 4vw);
	$font-sizes: map.set(
		$font-sizes,
		$i * 100,
		clamp(#{$fluid-min}, #{$fluid-scaler}, #{$level-size})
	);
}

@if meta.global-variable-exists('font-sizes', 'config') {
	$font-sizes: map.merge($font-sizes, config.$font-sizes);
}

:root {
	@include map('--fs', $font-sizes);
}
