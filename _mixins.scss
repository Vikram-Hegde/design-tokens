@use 'sass:list';
@use 'sass:math';
@use './functions' as func;

@mixin prefers-motion() {
	@media (prefers-reduced-motion: no-preference) {
		@content;
	}
}

@mixin prefer-dark() {
	@media (prefers-color-scheme: dark) {
		@content;
	}
}

@mixin touch-device {
	@media (hover: none), (pointer: coarse) {
		@content;
	}
}

@mixin flex($x: start, $y: start, $dir: row) {
	display: flex;
	justify-content: $x;
	align-items: $y;
	@if ($dir != row) {
		flex-direction: $dir;
	}
}

@mixin rounded($size) {
	inline-size: #{$size};
	block-size: #{$size};
	border-radius: calc($size / 2);
}

@mixin map($prefix, $variable) {
	@each $prop, $value in $variable {
		#{$prefix}-#{$prop}: #{$value};
	}
}

%range {
	background-color: transparent;
	appearance: none;
	block-size: 38px;
	margin: 10px auto;
	display: block;

	&:focus {
		outline-offset: 5px;
	}

	&::-webkit-slider-runnable-track {
		inline-size: var(--track-inline);
		block-size: var(--track-block);
		background: var(--background);
		cursor: pointer;
		border-radius: 6px;
	}

	&::-webkit-slider-thumb {
		block-size: var(--thumb-block);
		inline-size: var(--thumb-inline);
		border-radius: 6px;
		background-color: #eee;
		cursor: pointer;
		-webkit-appearance: none;
		margin-block-start: calc(((var(--thumb-block) / 2) - 4px) * -1);
		border: 1px solid #666;
	}

	&::-moz-range-track {
		inline-size: var(--track-inline);
		block-size: var(--track-block);
		cursor: pointer;
		background: var(--background);
		border-radius: 6px;
	}
	&::-moz-range-thumb {
		block-size: var(--thumb-block);
		inline-size: var(--thumb-inline);
		border-radius: 6px;
		background-color: #eee;
		cursor: pointer;
	}
}

%centered {
	@include flex(center, center);
}

%grid-inherit {
	display: grid;
	grid-template-columns: inherit;
}
